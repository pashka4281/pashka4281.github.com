// Generated by CoffeeScript 1.4.0
var $height, $recommendations, $style, $textarea, onLinkedInAuth, rebuildScriptAndPreview;

$recommendations = [];

$textarea = void 0;

$height = void 0;

$style = $('<style type="text/css">').appendTo('head');

onLinkedInAuth = function() {
  $textarea = $('textarea#output');
  $textarea.removeProp('disabled').prop('placeholder', "Loading script... Please wait a second or two.");
  return IN.API.Raw("/people/~:(recommendations-received)").method("GET").result(function(result) {
    var profilesLoaded, received, receivedCount;
    received = result.recommendationsReceived.values;
    receivedCount = received.length;
    profilesLoaded = 0;
    return $.each(received, function(i, data) {
      return IN.API.Profile(data.recommender.id).fields(["pictureUrl", "headline", "publicProfileUrl"]).result(function(result) {
        var recommender;
        profilesLoaded += 1;
        recommender = result.values[0];
        $recommendations.push({
          text: data.recommendationText,
          recommender: {
            id: data.recommender.id,
            pictureUrl: recommender.pictureUrl,
            profileUrl: recommender.publicProfileUrl,
            headline: recommender.headline,
            name: "" + data.recommender.firstName + " " + data.recommender.lastName
          }
        });
        if (!(profilesLoaded < receivedCount)) {
          $('#plugin .settings').show();
          return rebuildScriptAndPreview();
        }
      });
    });
  });
};

rebuildScriptAndPreview = function() {
  var embedCode, output, salt, theme, wrapper;
  $('#plugin .preview .content').html('');
  $textarea.val("");
  salt = "bcbd66f0-6c45-11e4-9803-0800200c9a66";
  theme = "#linkedIn-recommendations-" + salt + " { overflow-y: " + ($height === void 0 ? 'none' : 'scroll') + "; height: " + ($height === void 0 ? 'auto' : "" + $height + "px") + "; font-family: Helvetica,FreeSans,\"Liberation Sans\",Helmet,Arial,sans-serif; } \n#linkedIn-recommendations-" + salt + " .recommendation  > img { border: none; border-radius: 0; width: 38px; float: left; margin: 0 10px 4px 0; } \n#linkedIn-recommendations-" + salt + " .recommendation  hgroup a { color: #069; font-size: 12px; text-decoration: none; font-weight: bold; display: block; line-height: 14px; }\n#linkedIn-recommendations-" + salt + " .recommendation  hgroup a:hover { text-decoration: underline; }\n#linkedIn-recommendations-" + salt + " .recommendation  hgroup h5 { font-weight: normal; color: #333333; font-size: 12px; line-height: 14px; }\n#linkedIn-recommendations-" + salt + " .recommendation  p { clear: left; color: #666666; font-size: 12px; line-height: 14px; }";
  $style.html(theme);
  wrapper = $('<div>');
  output = $("<div id=\"linkedIn-recommendations-" + salt + "\">");
  output.appendTo(wrapper);
  $.each($recommendations, function(i, data) {
    var recommendation;
    recommendation = "<div class=\"recommendation\">\n  <img src=\"" + data.recommender.pictureUrl + "\"></img>\n  <hgroup>\n    <a href=\"" + data.recommender.profileUrl + "\" target=\"_blank\">" + data.recommender.name + "</a>\n    <h5>" + data.recommender.headline + "</h5>\n  </hgroup>\n  <p style=\"clear: left;\">" + data.text + "</p>\n</div>";
    return $(recommendation).appendTo(output);
  });
  $('#plugin .preview .content').append(output.clone());
  embedCode = "<!-- LinkedIn recommendations plugin. Generated: " + (Date()) + "-->\n<script>\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  style.innerHTML = '" + (theme.replace(/(\r\n|\n|\r)/gm, "")) + "';\n  document.getElementsByTagName('head')[0].appendChild(style);\n\n  document.write(\"" + (wrapper.html().replace(/(")/g, '\\"').replace(/(\r\n|\n|\r)/gm, "")) + "\");\n</script>";
  return $textarea.val(embedCode);
};

$(document).ready(function() {
  return $('input[name="height"]').on('change', function() {
    if (!$recommendations.length) {
      return;
    }
    if ($(this).val() === "auto") {
      $height = void 0;
    } else {
      $height = $('#heightInput').val();
    }
    console.log($height);
    return rebuildScriptAndPreview();
  }).trigger('change');
});
